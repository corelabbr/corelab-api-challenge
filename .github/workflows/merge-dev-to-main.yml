name: CI Pipeline

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      JWT_SECRET: srecretkey

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install backend dependencies
        run: npm install
        working-directory: ./back
      - name: Generate Prisma client
        run: npx prisma generate
        working-directory: ./back
      - name: Run migrations
        run: npx prisma migrate deploy
        working-directory: ./back
      - name: Run backend tests
        run: npm test
        working-directory: ./back

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./front
      - name: Build frontend
        run: npm run build
        working-directory: ./front

  enable-automerge:
    needs: [backend, frontend]     
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Merge pull request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: "squash"
            });
